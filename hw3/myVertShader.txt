#version 150 compatibility

uniform vec4 center;
uniform float radius;

struct MyDiv {
  vec4 coord;
  vec3 normal;
  vec2 texCoord;
};
varying MyDiv mydiv;

void main(){
  // in gl_Vertex : vec4  It means input point position
  // in gl_Normal : vec3
  // in gl_MultiTexCoord0 : vec4
  // in gl_ProjectionMatrix : mat4
  // in gl_ModelViewMatrix : mat4
  // in gl_NormalMatrix : mat3
  // out gl_Position : vec4  It means output point position
  // out gl_TexCoord[n] : vec4

  // what if gl_ModelViewMatrix isn't supported?
  mydiv.coord = gl_Vertex - center;
  mydiv.normal = normalize(gl_NormalMatrix * gl_Normal);
  gl_Position = gl_ProjectionMatrix * gl_ModelViewMatrix * gl_Vertex;
  mydiv.texCoord = gl_MultiTexCoord0.xy;
}
